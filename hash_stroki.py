" " "    Определение количества различных подстрок с использованием хеш-функции. " \
"        Пусть на вход функции дана строка. Требуется вернуть количество различных подстрок в этой строке." \
"" \
"        Примечания:" \
"                   * в сумму не включаем пустую строку и строку целиком;" \
"                   * задача считается решённой, если в коде использована функция вычисления хеша (hash(), " \
"                       sha1() или любая другая из модуля hashlib)  " " "

from hashlib import sha1

# функция считает количество вхождений подстроки в строку
def rabin_karp(s: str, subs: str) -> int:

    len_subs = len(subs)
    h_subs = sha1(subs.encode('utf-8')).hexdigest()

    n = 0

    for i in range(len(s) - len_subs + 1):

        if h_subs == sha1(s[i : i + len_subs].encode('utf-8')).hexdigest():
            n += 1

    return n

# получение от пользователя строки
str = input("Введите строку: ")

# перебор всех возможных подстрок в строке
n = 0
for i in range(len(str)):
    for j in range(len(str) - 1):
        if i > j:
            n += rabin_karp(str, str[j:i])

print(f"Количество подстрок в строке равно {n}")